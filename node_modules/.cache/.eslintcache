[{"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/index.tsx":"1","/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/App.tsx":"2","/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/redux/store.ts":"3","/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/redux/jokesReducer.ts":"4","/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/components/List/List.tsx":"5","/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/components/Container/Container.tsx":"6","/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/hooks/hooks.ts":"7"},{"size":598,"mtime":1680180516839,"results":"8","hashOfConfig":"9"},{"size":263,"mtime":1680180872904,"results":"10","hashOfConfig":"9"},{"size":1077,"mtime":1680180584178,"results":"11","hashOfConfig":"9"},{"size":2250,"mtime":1680180835277,"results":"12","hashOfConfig":"9"},{"size":2823,"mtime":1680180818126,"results":"13","hashOfConfig":"9"},{"size":245,"mtime":1680180778166,"results":"14","hashOfConfig":"9"},{"size":385,"mtime":1680180638838,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dpgjdr",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/index.tsx",[],[],"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/App.tsx",[],[],"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/redux/store.ts",[],[],"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/redux/jokesReducer.ts",[],[],"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/components/List/List.tsx",["38","39"],[],"import s from './List.module.css';\nimport React, { useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport {\n  addJoke,\n  deleteJoke,\n  Joke,\n  requestJokes,\n  requestRefreshJokes,\n} from '../../redux/jokesReducer';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\n\ntype ListProps = {\n  title: string\n};\n\nexport const List = ({ title }: ListProps): JSX.Element => {\n  const jokes = useAppSelector((state) => state.jokes.jokes);\n  const favJokes = useAppSelector((state) => state.jokes.favJokes);\n  const isLoading = useAppSelector((state) => state.jokes.isLoading);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(requestJokes())\n  }, [dispatch]);\n\n  const finalJokes = [...favJokes, ...jokes];\n\n  return (\n    <>\n      <h1 className=\"animate__heartBeat\">{title}</h1>\n      <ul className={s.jokesList}>\n        {finalJokes?.length > 0 &&\n          finalJokes.map((joke) => (\n            <li className={s.jokesCard}>\n              <div className={s.jokesContent}>\n                <p className={s.jokesType}>\n                  Type: <span className={s.jokesName}>{joke.type}</span>\n                </p>\n                <p className={s.jokesId}>ID: {joke.id}</p>\n              </div>\n              <h3 className={s.jokesSetup}>Setup:</h3>\n              <p className={s.jokesText}>{joke.setup}</p>\n              <h3 className={s.jokesPunchline}>Punchline:</h3>\n              <p className={s.jokesText}>{joke.punchline}</p>\n              <ul className={s.jokesBtns}>\n                <li className={s.jokesBtn}>\n                  <button\n                    onClick={() => dispatch(deleteJoke(joke))}\n                    className={s.jokesDel}\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>\n                </li>\n                <li className={s.jokesBtn}>\n                  <button\n                    onClick={() => dispatch(addJoke(joke))}\n                    className={s.jokesAdd}\n                    type=\"button\"\n                  >\n                    Add\n                  </button>\n                </li>\n                <li className={s.jokesBtn}>\n                  <button\n                    onClick={() => {\n                      dispatch(deleteJoke(joke))\n                      dispatch(requestRefreshJokes())\n                    }}\n                    className={s.jokesRefresh}\n                    type=\"button\"\n                  >\n                    Refresh\n                  </button>\n                </li>\n              </ul>\n            </li>\n          ))}\n      </ul>\n      <div className={s.jokesLoad}>\n        <Button\n          variant=\"contained\"\n          onClick={() => dispatch(requestRefreshJokes())}\n        >\n          Load more\n        </Button>\n      </div>\n    </>\n  )\n}\n","/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/components/Container/Container.tsx",[],[],"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/hooks/hooks.ts",[],[],{"ruleId":"40","severity":1,"message":"41","line":7,"column":3,"nodeType":"42","messageId":"43","endLine":7,"endColumn":7},{"ruleId":"40","severity":1,"message":"44","line":20,"column":9,"nodeType":"42","messageId":"43","endLine":20,"endColumn":18},"@typescript-eslint/no-unused-vars","'Joke' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used."]