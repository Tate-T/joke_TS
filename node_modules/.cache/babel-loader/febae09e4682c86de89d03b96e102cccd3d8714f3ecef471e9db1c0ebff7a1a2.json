{"ast":null,"code":"var _jsxFileName = \"/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/components/List/List.tsx\",\n  _s = $RefreshSig$();\nimport s from './List.module.css';\nimport React, { useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport { addJoke, deleteJoke, requestJokes, requestRefreshJokes } from '../../redux/jokesReducer';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const List = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const jokes = useAppSelector(state => state.jokes.jokes);\n  const favJokes = useAppSelector(state => state.jokes.favJokes);\n  const isLoading = useAppSelector(state => state.jokes.isLoading);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(requestJokes());\n  }, [dispatch]);\n  const finalJokes = [...favJokes, ...jokes];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"animate__heartBeat\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.jokesList,\n      children: (finalJokes === null || finalJokes === void 0 ? void 0 : finalJokes.length) > 0 && finalJokes.map(joke => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: s.jokesCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.jokesContent,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.jokesType,\n            children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: s.jokesName,\n              children: joke.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.jokesId,\n            children: [\"ID: \", joke.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: s.jokesSetup,\n          children: \"Setup:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.jokesText,\n          children: joke.setup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: s.jokesPunchline,\n          children: \"Punchline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.jokesText,\n          children: joke.punchline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: s.jokesBtns,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: s.jokesBtn,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch(deleteJoke(joke)),\n              className: s.jokesDel,\n              type: \"button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: s.jokesBtn,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch(addJoke(joke)),\n              className: s.jokesAdd,\n              type: \"button\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: s.jokesBtn,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                dispatch(deleteJoke(joke));\n                dispatch(requestRefreshJokes());\n              },\n              className: s.jokesRefresh,\n              type: \"button\",\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.jokesLoad,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => dispatch(requestRefreshJokes()),\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(List, \"grQZSGbTG8TCksb035q/8FUKh8U=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppDispatch];\n});\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["s","React","useEffect","Button","addJoke","deleteJoke","requestJokes","requestRefreshJokes","useAppDispatch","useAppSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","List","_ref","_s","title","jokes","state","favJokes","isLoading","dispatch","finalJokes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","jokesList","length","map","joke","jokesCard","jokesContent","jokesType","jokesName","type","jokesId","id","jokesSetup","jokesText","setup","jokesPunchline","punchline","jokesBtns","jokesBtn","onClick","jokesDel","jokesAdd","jokesRefresh","jokesLoad","variant","_c","$RefreshReg$"],"sources":["/Users/tetiana.tarasovych/Desktop/jokes_type-script/src/components/List/List.tsx"],"sourcesContent":["import s from './List.module.css';\nimport React, { useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport {\n  addJoke,\n  deleteJoke,\n  Joke,\n  requestJokes,\n  requestRefreshJokes,\n} from '../../redux/jokesReducer';\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks';\n\ntype ListProps = {\n  title: string\n};\n\nexport const List = ({ title }: ListProps): JSX.Element => {\n  const jokes = useAppSelector((state) => state.jokes.jokes);\n  const favJokes = useAppSelector((state) => state.jokes.favJokes);\n  const isLoading = useAppSelector((state) => state.jokes.isLoading);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(requestJokes())\n  }, [dispatch]);\n\n  const finalJokes = [...favJokes, ...jokes];\n\n  return (\n    <>\n      <h1 className=\"animate__heartBeat\">{title}</h1>\n      <ul className={s.jokesList}>\n        {finalJokes?.length > 0 &&\n          finalJokes.map((joke) => (\n            <li className={s.jokesCard}>\n              <div className={s.jokesContent}>\n                <p className={s.jokesType}>\n                  Type: <span className={s.jokesName}>{joke.type}</span>\n                </p>\n                <p className={s.jokesId}>ID: {joke.id}</p>\n              </div>\n              <h3 className={s.jokesSetup}>Setup:</h3>\n              <p className={s.jokesText}>{joke.setup}</p>\n              <h3 className={s.jokesPunchline}>Punchline:</h3>\n              <p className={s.jokesText}>{joke.punchline}</p>\n              <ul className={s.jokesBtns}>\n                <li className={s.jokesBtn}>\n                  <button\n                    onClick={() => dispatch(deleteJoke(joke))}\n                    className={s.jokesDel}\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>\n                </li>\n                <li className={s.jokesBtn}>\n                  <button\n                    onClick={() => dispatch(addJoke(joke))}\n                    className={s.jokesAdd}\n                    type=\"button\"\n                  >\n                    Add\n                  </button>\n                </li>\n                <li className={s.jokesBtn}>\n                  <button\n                    onClick={() => {\n                      dispatch(deleteJoke(joke))\n                      dispatch(requestRefreshJokes())\n                    }}\n                    className={s.jokesRefresh}\n                    type=\"button\"\n                  >\n                    Refresh\n                  </button>\n                </li>\n              </ul>\n            </li>\n          ))}\n      </ul>\n      <div className={s.jokesLoad}>\n        <Button\n          variant=\"contained\"\n          onClick={() => dispatch(requestRefreshJokes())}\n        >\n          Load more\n        </Button>\n      </div>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}